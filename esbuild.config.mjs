import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFileSync, mkdirSync } from 'fs';
import { join } from 'path';

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

// Diret√≥rios
const outdir = 'dist';

mkdirSync(outdir, { recursive: true });

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: `${outdir}/main.js`,
	minify: prod,
});

if (prod) {
	await context.rebuild();

	// Copia o manifest.json
	copyFileSync('manifest.json', join(outdir, 'manifest.json'));

	// Copia o style.css da pasta src para dist
	copyFileSync('src/styles.css', join(outdir, 'style.css'));

	process.exit(0);

} else {
	await context.watch();
}
